buildscript {
	ext {
		queryDslVersion = "5.0.0"
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version "${springBootVersion}"
	id 'io.spring.dependency-management' version "${dependencyManagementVersion}"
	//querydsl 추가 start
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
	//querydsl 추가 end
}

group = 'kr.co.jandb'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	// springboot default
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// test junit
	testImplementation 'junit:junit:4.13.1'

	// H2 DB
	runtimeOnly 'com.h2database:h2'

	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	// jwt
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// querydsl
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
	// 20240219 trouble shooting(issue: qclass is not generated, solve: implementation -> annotationProcessor modify)
	annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	// 20240220 trouble shooting(issue: Attempt to recreate a file for type qclass( maybe qclass generated folder duplicate :compileJava), solve: annotationProcessor -> implementation modify)
	//implementation "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
	//annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"

	// Entity
	implementation 'org.hibernate:hibernate-entitymanager:5.6.15.Final'

	// maria db
	implementation 'org.mariadb.jdbc:mariadb-java-client'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	// lombok test
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

/*
tasks.named('test') {
	useJUnitPlatform()
}
*/

//querydsl 추가
// 20240220 build 시에는 qclass가 생성이 안되나 한번 실행하면 /generated/generated/ 하위에 qclass 생성됨
// 처음 세팅 시 repository에 qclass 안나올 수 있으므로 관련 처리 필요함. 어떻게든 서비스를 한번 실행해야 함.
def querydslDir = "$projectDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	// 20240220 머가 문제인지 아직 정확하게 파악이 안됨.
	// qclass 생성 path의 문제인지 머가 문제인지 원인을 모르겠음.
	// 계속 이것 저것 테스트 해봤으나 할때마다 다른 문제가 발생함.
	// 우선 위 dependencies 에서 annotationProcessor > implementation 변경으로
	// 최종 임시 해결 함. 경우에 따라서 implementation > annotationProcessor 변경해야 할 경우도 발생함.
	//File file = new File("$projectDir/generated/querydsl/justdoit")

	//File file2 = new File("$projectDir/generated/generated/justdoit")

	//println "file >>>>> " + file.exists()
	//println "file2 >>>>> " + file2.exists()

	//if (!(file.exists() || file2.exists())) {
		options.annotationProcessorPath = configurations.querydsl
	//}
}
configurations {
	//File file = new File("$projectDir/generated/querydsl/justdoit")

	//File file2 = new File("$projectDir/generated/generated/justdoit")

	//println "222 file >>>>> " + file.exists()
	//println "222 file2 >>>>> " + file2.exists()

	//if (!(file.exists() || file2.exists())) {
		compileOnly {
			extendsFrom annotationProcessor
		}

		querydsl.extendsFrom compileClasspath
	//}
}
clean {
	delete file(querydslDir)
}
//querydsl 추가 끝
